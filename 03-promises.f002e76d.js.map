{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAUC,GACjBC,EAAAJ,GAASK,OAAOC,QAAQH,E,CAG1B,SAASI,EAASC,GAChBJ,EAAAJ,GAASK,OAAOI,QAAQD,E,CAxCVE,SAASC,cAAc,QAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOC,KAAKF,MAAMZ,OAC1Be,EAAOF,OAAOC,KAAKC,KAAKf,OACxBgB,EAASH,OAAOC,KAAKE,OAAOhB,OAClC,IAAIiB,EAAW,EACXC,EAAiBN,EAAQG,EAE7B,MAAMI,EAAYC,aAAY,KAC5BH,GAAY,EACZC,GAAkBH,EAQtB,SAAuBE,EAAUL,GAC/B,OAAO,IAAIS,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBL,QAAiBL,OACvCW,EAAK,sBAAoBN,QAAeL,MAAU,GAC1DA,EAAM,G,CAdTgB,CAAcX,EAAUC,GAAgBW,KAAK9B,GAAW+B,MAAM1B,GAE1DY,IAAWC,GAAUc,cAAcZ,EAAU,GAChDJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const delay = Number(this.delay.value);\n  const step = Number(this.step.value);\n  const amount = Number(this.amount.value);\n  let position = 0;\n  let differenceStep = delay - step;\n\n  const promiseId = setInterval(() => {\n    position += 1;\n    differenceStep += step;\n\n    createPromise(position, differenceStep).then(onResolve).catch(onReject);\n\n    if (amount === position) clearInterval(promiseId);\n  }, step);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onResolve(value) {\n  Notiflix.Notify.success(value);\n}\n\nfunction onReject(error) {\n  Notiflix.Notify.failure(error);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$onResolve","value","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onReject","error","failure","document","querySelector","addEventListener","e","preventDefault","delay","Number","this","step","amount","position","differenceStep","promiseId","setInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","then","catch","clearInterval"],"version":3,"file":"03-promises.f002e76d.js.map"}